;---------------------------------------------------------------------
;SOUND DRIVER (C) Minami Youichi 09.23.2008 - 10.04.2008
;
;使う人居るか知らんけど、このサウンドドライバの使い方:
;	このコードを 0xA00000(Z80のRAMエリア)に転送したら、
;	あとは鳴らしたい時に以下のシーケンスを実行すればOK。
;
;	1. 0xA00010 にPCMスタートアドレスをぶち込む
;	2. 0xA00014 にPCMエンドアドレスをぶち込む
;	3. 0xA00015 に 0x00 をぶち込む
;
;	スタートアドレスとエンドアドレスがバンクを跨いでいると死ぬ。
;	なのでバンク(32KBytes単位)を跨がない範囲に揃える必要がある。
;
;	PCMのフォーマットはYM2151のDACデータそのまんま。
;
;アセンブルの仕方:
;	Zilogスタンダードな書き方したつもり。
;	ZASMとかアブソリュートアセンブラでHEXファイル吐かせたら、
;	HEX2BINとかでバイナリ作れば良い。
;
; 32000 Hz : 110 cycles per sample
; 22050 Hz : 161 cycles per sample
; 16000 Hz : 221 cycles per sample
; 13400 Hz : 264 cycles per sample
; 11025 Hz : 321 cycles per sample
;  8000 Hz : 443 cycles per sample
;
;Z80メモリ 8KB
;254サイクル/サンプル

;---------------------------------------------------------------------
A_SP:		EQU		2000h
BANK:		EQU		6000h
YM_REG:		EQU		4000h
YM_DAT:		EQU		4001h
PSG_PORT:	EQU		7F11h

FMBUFF		EQU		$1A00			; 256byte(100H)
FMBUFF_H	EQU		$1A
FMBUFF_BH	EQU		$1D
VOLTBL		EQU		$0A00			; 256byte(100H)
VOLTBL_H	EQU		$0A
PSGTBL		EQU		$1A00			; 768byte(300H)
PSGTBL_H	EQU		$1A
WAVBUFFER0  EQU		$1E00           ; WAV buffer 0
WAVBUFFER1  EQU		$1F00           ; WAV buffer 1

;---------------------------------------------------------------------
		ORG	$0000
		DI			;割り込み禁止
		LD	SP, A_SP	;スタックポインタ初期化
		IM	1		;割り込みMODE 1
;;		EI
		JP	INIT		;RESET

;---------------------------------------------------------------------
		BLOCK $0038-$
		/*
		PUSH HL
		LD HL,(VSYNC_C)
		INC HL
		LD (VSYNC_C),HL
		POP HL
		EI
		*/
		RETI			;VSYNC割り込み

;---------------------------------------------------------------------
		BLOCK $50-$
START1:			DW	0		//0x00
NOW1:			DW	0		//0x02
END1:			DW	0		//0x04
PLAY1:			DB	0		//0x06
				DB	0
NOW_BANK:		DW	0		//0x08
NOW_OFF:		DB	0		//0x0a
NOW_LOOP:		DB	0		//0x0b
NOW_END:		DB	0		//0x0c
				DB	0
NEXT_BANK:		DW	0		//0x0e
NEXT_OFF:		DB	0		//0x10
				DB	0
END_BANK:		DW	0		//0x12
END_OFF:		DB	0		//0x14
				DB	0
NOW_ADR:		DW	0		//0x16
NEXT_NOW1:		DW	0		//0x18
PLAY_MODE:		DB	6		//0x1a
				DB	0
NOW_END1:		DW	0		//0x1c
VOL1:			DW	0		//0x1e
FMOUT1:			DW	0		//0x20
FMREAD1:		DW	0		//0x22
ADD_L1:			DW	0		//0x24
ADD_H1:			DW	0		//0x26
NOW_TMP1:		DW	0		//0x28
PAN1:			DW	3		//0x2A
NOW1_L:			DW	0		//0x2C
;---------------------------------------------------------------------
		BLOCK $100-$
INIT:	
		LD	HL,FMBUFF
		LD	(FMOUT1),HL
		LD	(FMREAD1),HL
;;		LD	A,3
		LD	A,$c0
		LD	(PAN1),A
INIT_10:
		CALL FMOUTPUT
		
		LD	A,(PLAY1)
		OR	A
		JP	Z,INIT_10
INIT_20:
		JP	LOOP_100
		
;---------------------------------------------------------------------
;	FMデータ出力
;---------------------------------------------------------------------
FMOUTPUT:
		EXX
		LD	BC,(FMOUT1)
		LD	DE,(FMREAD1)
FMOUTPUT_01:
		LD		A,B
		CP		D
		JP		NZ,FMOUTPUT_02
		LD		A,C
		CP		E
		JP		NZ,FMOUTPUT_02
		
		LD	(FMREAD1),DE
		
		EXX
		RET
FMOUTPUT_02:
		LD	HL,YM_REG
FMOUTPUT_03:
		LD	A,(YM_REG)
		BIT	7,A
		JP	NZ,FMOUTPUT_03
		
		LD	A,(DE)
		INC	DE
		ADD	A,A
		LD	L,A
		
		LD	A,(DE)
		INC	DE
		LD	(HL), A
		
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		
FMOUTPUT_04:
		LD	A,(YM_REG)
		BIT	7,A
		JP	NZ,FMOUTPUT_03
		
		LD	A,(DE)
		INC	DE
		INC	HL
		LD	(HL), A
		
		LD	A,D
		CP	A,FMBUFF_BH
		JP	NZ,FMOUTPUT_05
		LD	D,FMBUFF_H
FMOUTPUT_05:
		
		JP	FMOUTPUT_01
		

;---------------------------------------------------------------------
;	PAN出力
;---------------------------------------------------------------------
PANOUT:
PANOUT_01:
		LD	A,(YM_REG)
		BIT	7,A
		JP	NZ,PANOUT_01
		
		LD	A,0xb6
		LD	(YM_REG+2),A
		
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
PANOUT_02:
		LD	A,(YM_REG)
		BIT	7,A
		JP	NZ,PANOUT_02
		LD	A,(PAN1)
;;		AND	3
;;		RL	A
;;		RL	A
;;		RL	A
;;		RL	A
;;		RL	A
;;		RL	A
		LD	(YM_REG+3),A
		RET
;---------------------------------------------------------------------
;mode1 そのまま再生(256バイトごと)
LOOP_100:
		CALL	PANOUT
LOOP_101:
		LD		A,-1				;再生中フラグ
		LD		(PLAY1),A
		LD		HL,(START1+0)		;再生位置獲得
		LD		(NOW1+0),HL
		LD		HL,(END1+0)			;終了位置獲得
		LD		(NOW_END1+0),HL
		XOR		A
		LD		(NOW1_L+0),A
LOOP_110:

;;		LD	HL, BANK	;バンクセレクト
;;		LD	A, (NOW1+0)
;;		RLCA
;;		LD	(HL), A		; bit 15
;;		LD	A, (NOW1+1)	;
;;		LD	(HL), A		; bit 16
;;		RRA
;;		LD	(HL), A		; bit 17
;;		RRA
;;		LD	(HL), A		; bit 18
;;		RRA
;;		LD	(HL), A		; bit 19
;;		RRA
;;		LD	(HL), A		; bit 20
;;		RRA
;;		LD	(HL), A		; bit 21
;;		XOR	A			; 32Mカートリッジまでなら上位2bitは無視可能
;;		LD	(HL), A		; bit 22
;;		LD	(HL), A		; bit 23

		LD	A, (NOW1+1)
		LD	HL, BANK	;バンクセレクト
		LD	(HL), A		; bit 15
		RRCA
		LD	(HL), A		; bit 16
		RRCA
		LD	(HL), A		; bit 17
		RRCA
		LD	(HL), A		; bit 18
		RRCA
		LD	(HL), A		; bit 19
		RRCA
		LD	(HL), A		; bit 20
		RRCA
		LD	(HL), A		; bit 21
		XOR	A			; 32Mカートリッジまでなら上位2bitは無視可能
		LD	(HL), A		; bit 22
		LD	(HL), A		; bit 23

LOOP_111_01:
		LD		A,(NOW1+0)		;HL PCMアドレス
		SET		7,A
		LD		H,A
		INC		A				;NOW_TMP1へ次のバンクアドレス
		LD		(NOW_TMP1+0),A
;;		LD		L,0
		LD		A,(NOW1_L+0)
		LD		L,A
		
		LD	A, 2Bh		;FM6無効, PCM有効
		LD	(YM_REG), A
		LD	A, 80h
		LD	(YM_DAT), A
		LD	A, 2Ah		;PCMデータレジスタを選択
		LD	(YM_REG), A
		
		LD		A,(VOL1+0)		;ボリュームテーブル獲得
		ADD		A,VOLTBL_H
		LD		B,A
		
		LD		IX,0			;小数点部分クリア
		LD		IYL,0
LOOP_111:
		LD		A,(HL)			;PCMデータ読み込み
		LD		C,A
		LD		A,(BC)			;ボリューム変換
		ADD		80h
		LD		(YM_DAT), A		;DACへ出力
		
		LD		DE,(ADD_L1)		;アドレス小数点部分の加算
		ADD		IX,DE
		LD		DE,(ADD_H1)		;アドレス整数部分の加算
		ADC		HL,DE
		
	JP C,LOOP_120
	LD	A,(NOW_TMP1+0)		;256byte分処理したか?
	CP	H
	JP	NZ,LOOP_130
		
LOOP_112:
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		
		LD	A,(PLAY1)				;再生停止?
		INC	A
		JP	NZ,INIT_10
		
;;		LD		A,(NOW_TMP1+0)		;256byte分処理したか?
;;		CP		H
;;		JP		NZ,LOOP_111
		
	DEC IYL
	JP NZ,LOOP_111
	LD	A,H
	LD	(NOW1+0),A
	LD	A,L
	LD	(NOW1_L+0),A
		
		
		CALL	FMOUTPUT			;FMデータ出力へ
		
		LD	A,(PLAY1)				;再生停止?
		INC	A
		JP	NZ,INIT_10
	
	JP LOOP_110
		
		
		LD		HL,(NOW1+0)			;次のバンクへ
		INC		HL
		LD		(NOW1+0),HL
		LD		DE,(NOW_END1+0)		;PCM終了?
		
		LD		A,H
		CP		D
		JP		NZ,LOOP_110
		LD		A,L
		CP		E
		JP		NZ,LOOP_110
		
LOOP_119:
		XOR	A						;再生停止フラグ
		LD	(PLAY1),A
		JP		INIT_10
		
		
LOOP_120:
		LD		HL,(NOW1+0)			;次のバンクへ
		INC		HL
		LD		(NOW1+0),HL
		LD		DE,(NOW_END1+0)		;PCM終了?
		
		LD		A,H
		CP		D
		JP		NZ,LOOP_121
		LD		A,L
		CP		E
		JP		NZ,LOOP_121
		
		JP		LOOP_119
LOOP_121:
		LD	A, (NOW1+1)
		LD	HL, BANK	;バンクセレクト
		LD	(HL), A		; bit 15
		RRCA
		LD	(HL), A		; bit 16
		RRCA
		LD	(HL), A		; bit 17
		RRCA
		LD	(HL), A		; bit 18
		RRCA
		LD	(HL), A		; bit 19
		RRCA
		LD	(HL), A		; bit 20
		RRCA
		LD	(HL), A		; bit 21
		XOR	A			; 32Mカートリッジまでなら上位2bitは無視可能
		LD	(HL), A		; bit 22
		LD	(HL), A		; bit 23
		
		LD		A,(NOW1+0)
		LD		H,A
		LD		A,(NOW1_L+0)
		LD		L,A
		
		JP		LOOP_119
LOOP_130:
		LD		HL,(NOW1+0)			;次のバンクへ
		INC		HL
		LD		(NOW1+0),HL
		LD		DE,(NOW_END1+0)		;PCM終了?
		
		LD		A,H
		CP		D
		JP		NZ,LOOP_121
		LD		A,L
		CP		E
		JP		NZ,LOOP_121
		
		JP		LOOP_119
LOOP_131:
		
		
;-------------------------------------------------------------
		DS		$100
END	
